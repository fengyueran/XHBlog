{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/jacman/source/CNAME","path":"CNAME","modified":0,"renderable":1},{"_id":"themes/jacman/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.eot","path":"font/fontdiao.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.woff","path":"font/fontdiao.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.ttf","path":"font/fontdiao.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","path":"img/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/author.jpg","path":"img/author.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","path":"img/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc.svg","path":"img/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nd.svg","path":"img/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-sa.svg","path":"img/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by.svg","path":"img/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-zero.svg","path":"img/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/jacman.jpg","path":"img/jacman.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/scrollup.png","path":"img/scrollup.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jekyll-search.js","path":"js/jekyll-search.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","path":"js/jquery.qrcode-0.12.0.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/tagcloud.js","path":"js/tagcloud.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/assets/weixin.png","path":"assets/weixin.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.svg","path":"font/fontdiao.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/banner.jpg","path":"img/banner.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"786a4f4075d54ced60340c61cd44e9a49d0bc3ae","modified":1519473795000},{"_id":"themes/jacman/.DS_Store","hash":"b0456f5c9aa85a8f5faa62f35dc373e0dac161e5","modified":1518425373000},{"_id":"themes/jacman/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1515489628000},{"_id":"themes/jacman/LICENSE","hash":"931516aa36c53eb7843c83d82662eb50cc3c4367","modified":1515493738000},{"_id":"themes/jacman/_config.yml","hash":"c97a9cd0afb133e1a07dc91c785dc67bb8869dad","modified":1518433912000},{"_id":"themes/jacman/README.md","hash":"79be8a49927c8666f1804d7ccd08af8d3268062a","modified":1515493738000},{"_id":"themes/jacman/README_zh.md","hash":"0854e4c96f53005f3a47e21af3f8aee361719ce4","modified":1515493738000},{"_id":"themes/jacman/_config_me.yml","hash":"dc81ad6a6ac14211fe1613fadf132ff28236ea99","modified":1515493738000},{"_id":"source/_posts/git submodule的使用.md","hash":"a4372893111407038acf1e59dfe663f6afb9bc78","modified":1520998121000},{"_id":"source/_posts/react最佳实践.md","hash":"d52eab68534f92ba70a169b529bb84c8b27491f6","modified":1525416679000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1519281450000},{"_id":"source/about/index.md","hash":"e71e439e33d5a8626aaf70debacc55b037625116","modified":1520935755000},{"_id":"themes/jacman/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1515489628000},{"_id":"source/_posts/git的常用命令简介.md","hash":"65e332a5ce6d22fbadac8ef94b9a586ec873d89f","modified":1525414872000},{"_id":"themes/jacman/.git/config","hash":"2d3ae691d19a816889480acb832a3813f5ad7605","modified":1515489628000},{"_id":"themes/jacman/.git/index","hash":"60497f21aab29fc6e73591ed31d8f3c51df9126c","modified":1515489629000},{"_id":"themes/jacman/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1515489624000},{"_id":"themes/jacman/.git/packed-refs","hash":"eb948a69bbff23c124d0145a66341b1af0f885d9","modified":1515489628000},{"_id":"themes/jacman/languages/zh-TW.yml","hash":"61a02ba818d641579a86fcd7f5926ab1e6ab5f70","modified":1515493738000},{"_id":"themes/jacman/languages/zh-CN.yml","hash":"1f3b9d00dd4322352b0c9c82a76dc9865a616d41","modified":1515493738000},{"_id":"themes/jacman/languages/default.yml","hash":"eea72d6138497287c0b3f4bd93e4f6f62b7aff37","modified":1515493738000},{"_id":"themes/jacman/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1515493738000},{"_id":"themes/jacman/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1515493738000},{"_id":"themes/jacman/layout/layout.ejs","hash":"5b4289a4526899809b9c2facea535367ff51ba2b","modified":1515493738000},{"_id":"themes/jacman/layout/index.ejs","hash":"75cef2172c286994af412e11ab7f4f5a0daaf1f5","modified":1515493738000},{"_id":"themes/jacman/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1515493738000},{"_id":"themes/jacman/layout/post.ejs","hash":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1515493738000},{"_id":"themes/jacman/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1515493738000},{"_id":"themes/jacman/layout/page.ejs","hash":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1515493738000},{"_id":"themes/jacman/source/.DS_Store","hash":"3079897bc15a191bc2d42b946640a4284a27e3dd","modified":1515492129000},{"_id":"themes/jacman/source/CNAME","hash":"a7d7367dbda80b03747a09e014f28072e97a1116","modified":1520935755000},{"_id":"themes/jacman/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1515489624000},{"_id":"themes/jacman/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1515489624000},{"_id":"themes/jacman/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1515489624000},{"_id":"themes/jacman/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1515489624000},{"_id":"themes/jacman/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1515489624000},{"_id":"themes/jacman/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1515489624000},{"_id":"themes/jacman/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1515489624000},{"_id":"themes/jacman/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1515489624000},{"_id":"themes/jacman/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1515489624000},{"_id":"themes/jacman/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1515489624000},{"_id":"themes/jacman/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1515489624000},{"_id":"themes/jacman/.git/logs/HEAD","hash":"9d5d543d22974be80223ae695099b8e99241e96a","modified":1515489628000},{"_id":"themes/jacman/layout/_partial/after_footer.ejs","hash":"c703b0c25139b8a5f8f9d24a334a07905e2b7987","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/analytics.ejs","hash":"697601996220fe0a0f9cd628be67dec3c86ae2aa","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/archive.ejs","hash":"2c7395e7563fe016521712a645c28a13f952d52a","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/article.ejs","hash":"261ecacb8456f4cb972632b6a9103860fa63b9a3","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/article_row.ejs","hash":"4cb855d91ece7f67b2ca0992fffa55472d0b9c93","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/footer.ejs","hash":"3703332570aa1d95403db19d91e1d06c3c41a164","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/head.ejs","hash":"761941be4922cd3c177c8130296b909bf7db5c09","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/header.ejs","hash":"495d793ea9d7f367a8996106da952f687e0910e7","modified":1520935755000},{"_id":"themes/jacman/layout/_partial/categories.ejs","hash":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/mathjax.ejs","hash":"d42994ac696f52ba99c1cbac382cd76d5b04a3e8","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/pagination.ejs","hash":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/search.ejs","hash":"1083824a6c6c3df02767f2f3b727aee78ebb76ec","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/tags.ejs","hash":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/sidebar.ejs","hash":"c4f527fff0070fbe65919053a16224412317f40d","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/tinysou_search.ejs","hash":"06ecddc8a9d40b480fe2e958af1dab857a9d5441","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/totop.ejs","hash":"bea5bb7cb9350b8af7d97a8d223af63a5b30ab78","modified":1515493738000},{"_id":"themes/jacman/layout/_widget/archive.ejs","hash":"39ea6b7888406fbd1b4cf236ebd718e881493374","modified":1515493738000},{"_id":"themes/jacman/layout/_widget/category.ejs","hash":"62c20e9873221eed8d4ebbe408c991746279e7c0","modified":1515493738000},{"_id":"themes/jacman/layout/_widget/douban.ejs","hash":"e3820c36169e88663e6c9177666b2904c1ce47e6","modified":1515493738000},{"_id":"themes/jacman/layout/_widget/github-card.ejs","hash":"5c759b6ea214bac56a393247de27e67ce73fb33f","modified":1515493738000},{"_id":"themes/jacman/layout/_widget/links.ejs","hash":"e49868063439c2092cdf9a8ec82cc295b0e42f66","modified":1515493738000},{"_id":"themes/jacman/layout/_widget/rss.ejs","hash":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1515493738000},{"_id":"themes/jacman/layout/_widget/tagcloud.ejs","hash":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1515493738000},{"_id":"themes/jacman/layout/_widget/sponsor.ejs","hash":"683d1a19b404ea2d67db37b22ec56b47dd0bd854","modified":1515493738000},{"_id":"themes/jacman/layout/_widget/weibo.ejs","hash":"a31c2b223d0feb2a227e203cac9e5d13b7d328a8","modified":1515493738000},{"_id":"themes/jacman/layout/_widget/tag.ejs","hash":"7e82ad9c916b9ce871b2f65ce8f283c5ba47947b","modified":1515493738000},{"_id":"themes/jacman/layout/_widget/weixin.ejs","hash":"a6aac8b82d00581af8d1853359be19345d088a1c","modified":1518435063000},{"_id":"themes/jacman/source/css/.DS_Store","hash":"9c7e4e0c9e06a16717e285d136648036f97626c7","modified":1515494855000},{"_id":"themes/jacman/source/css/style.styl","hash":"a0a45af186a72ae68979bf26f2a5d0d2303189ca","modified":1515493738000},{"_id":"themes/jacman/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1520935755000},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1520935755000},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1520935755000},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1520935755000},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1520935755000},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1520935755000},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1520935755000},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1520935755000},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1520935755000},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1520935755000},{"_id":"themes/jacman/source/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1520935755000},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1520935755000},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1520935755000},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1520935755000},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1520935755000},{"_id":"themes/jacman/source/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1520935755000},{"_id":"themes/jacman/source/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1520935755000},{"_id":"themes/jacman/source/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1520935755000},{"_id":"themes/jacman/source/img/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1515492878000},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1515493738000},{"_id":"themes/jacman/source/img/author.jpg","hash":"b03bdafababe1dd3bb533719518e0a2d66b51b9d","modified":1515491675000},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1515493738000},{"_id":"themes/jacman/source/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1515493738000},{"_id":"themes/jacman/source/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1515493738000},{"_id":"themes/jacman/source/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1515493738000},{"_id":"themes/jacman/source/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1515493738000},{"_id":"themes/jacman/source/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1515493738000},{"_id":"themes/jacman/source/img/favicon.png","hash":"6658b5a8bbe2a31ceea767cdc28faedddd289285","modified":1515493738000},{"_id":"themes/jacman/source/img/favicon.ico","hash":"df5708b7258bd6e690d8883c954152c8636cfa65","modified":1515491675000},{"_id":"themes/jacman/source/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1515493738000},{"_id":"themes/jacman/source/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1515493738000},{"_id":"themes/jacman/source/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1520935755000},{"_id":"themes/jacman/source/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1515493738000},{"_id":"themes/jacman/source/img/logo.png","hash":"b03bdafababe1dd3bb533719518e0a2d66b51b9d","modified":1515491675000},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1520935755000},{"_id":"themes/jacman/source/js/jekyll-search.js","hash":"b80e71eb664e5ed8545a887a073aa9fc5ee3fca2","modified":1520935755000},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1520935755000},{"_id":"themes/jacman/source/js/toc.js","hash":"0451f0c1dc475186067cc19afc20c8e9ad3f02d7","modified":1520935755000},{"_id":"themes/jacman/source/js/tagcloud.js","hash":"3adec98f4a68d40ecc2583769c48278a90421dd2","modified":1520935755000},{"_id":"themes/jacman/source/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1520935755000},{"_id":"themes/jacman/source/assets/weixin.png","hash":"859cd451ffc3becad71e2550cd0fe4130e070a6d","modified":1520935755000},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1520935755000},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1520935755000},{"_id":"themes/jacman/source/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1520935755000},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1520935755000},{"_id":"themes/jacman/.git/refs/heads/master","hash":"cdf7ebb26811b17304103dcf164bb82b88b4f841","modified":1515489628000},{"_id":"themes/jacman/.git/objects/pack/pack-debd836f9f2ddd8662fa6b64ca7c962662bc6032.idx","hash":"b3f64d39018722f4e2ccc9cef0b8bec00f0de9c8","modified":1515489628000},{"_id":"themes/jacman/layout/_partial/post/footer.ejs","hash":"b12ec08a5845a3d8c01257614f1dfead879c87d2","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/post/article.ejs","hash":"b09e3acea7076e1f01dfe0c2295e19951ea09437","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/post/catetags.ejs","hash":"0e37bababc8f4659f5b59a552a946b46d89e4158","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/post/jiathis.ejs","hash":"d7f5960039ac74924559ab6ba03c64457b8f0966","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/post/comment.ejs","hash":"c88bc8f5805173920a5fdd7e9234a850e3d8e151","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/post/header.ejs","hash":"14a40545bde669af917c6d0d1df6188240a901f8","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/post/gallery.ejs","hash":"fafc2501d7e65983b0f5c2b58151ca12e57c0574","modified":1515493738000},{"_id":"themes/jacman/layout/_partial/post/pagination.ejs","hash":"7de9c07a4c968429a8088c31a28b7f3a993ded1b","modified":1515493738000},{"_id":"themes/jacman/source/css/_partial/article.styl","hash":"c69641b4a34a8c62986b335414413dbde26de25e","modified":1515493738000},{"_id":"themes/jacman/source/css/_partial/footer.styl","hash":"fbd8d10e6dbf8c94bd09aa0fb456f23b2f02a9ea","modified":1515493738000},{"_id":"themes/jacman/source/css/_partial/aside.styl","hash":"506fde1d67ce750452cbe84bee01a19c7d027c5e","modified":1515493738000},{"_id":"themes/jacman/source/css/_partial/duoshuo.styl","hash":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1515493738000},{"_id":"themes/jacman/source/css/_partial/gallery.styl","hash":"7246809f4ce3166ec1b259bf475cae1a48e29aad","modified":1515493738000},{"_id":"themes/jacman/source/css/_partial/header.styl","hash":"1c5755a290ed271f7ce8e5d14a68aace80a701c7","modified":1520935755000},{"_id":"themes/jacman/source/css/_partial/helper.styl","hash":"1136600932b97534b88465bf05ef313630b2de3d","modified":1515493738000},{"_id":"themes/jacman/source/css/_partial/index.styl","hash":"a72ff14effd276015264f870f47ed8f8413bf5d3","modified":1515493738000},{"_id":"themes/jacman/source/css/_base/.DS_Store","hash":"0c6042ed0973cfb03f4dfc82bc3ea220bbbcdf3d","modified":1515495117000},{"_id":"themes/jacman/source/css/_partial/totop.styl","hash":"96363d7c5aaed5f649667fc0752a62620a67e872","modified":1515493738000},{"_id":"themes/jacman/source/css/_base/font.styl","hash":"c8a0faf43b08e37ad07a5669db76d595da966159","modified":1515493738000},{"_id":"themes/jacman/source/css/_base/public.styl","hash":"f56ba7e551a7a2847411a9eb8f1a29b89abcfa10","modified":1518173910000},{"_id":"themes/jacman/source/css/_base/variable.styl","hash":"cb652eb83c28a208743fabab92de896f8b7cbf7b","modified":1515493738000},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1520935755000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1520935755000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1520935755000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1520935755000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1520935755000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1520935755000},{"_id":"themes/jacman/source/img/banner.jpg","hash":"650f9ffce2ba4a7d73defc464e483daf048edd07","modified":1518435504000},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1520935755000},{"_id":"themes/jacman/.git/logs/refs/heads/master","hash":"9d5d543d22974be80223ae695099b8e99241e96a","modified":1515489628000},{"_id":"themes/jacman/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1515489628000},{"_id":"themes/jacman/source/css/_base/highlight/highlight.styl","hash":"91b62bfc58390b0d5db782a75be6965ee3665eb3","modified":1515493738000},{"_id":"themes/jacman/source/css/_base/highlight/theme.styl","hash":"e3a59bd427ba37a54ead9eeba9a5356b3f720a48","modified":1515493738000},{"_id":"themes/jacman/.git/logs/refs/remotes/origin/HEAD","hash":"9d5d543d22974be80223ae695099b8e99241e96a","modified":1515489628000},{"_id":"themes/jacman/.git/objects/pack/pack-debd836f9f2ddd8662fa6b64ca7c962662bc6032.pack","hash":"7b8132c44084a29c2ac01efbd6ced55f9412a394","modified":1515489628000},{"_id":"public/about/index.html","hash":"8ae1164ef87de7ebbc030b32d4b6ed27c0f52eed","modified":1525416703399},{"_id":"public/2016/07/24/git submodule的使用/index.html","hash":"70bcd13bfe0db13a08bc821ec63fc0e132af08e4","modified":1525416703399},{"_id":"public/categories/Git/index.html","hash":"2dd632420d1fe5b5e773ef8898c5bfff24059f55","modified":1525416703399},{"_id":"public/archives/2016/index.html","hash":"dd10b0c77055463e32f77ced432bd2336f3d005c","modified":1525416703399},{"_id":"public/archives/index.html","hash":"6c08be8b339417c9730189cf2abc5833ab4cf4c3","modified":1525416703399},{"_id":"public/archives/2016/06/index.html","hash":"fe4cbc26cde11d1022cce8a0b4f4aa4c5b6760fe","modified":1525416703399},{"_id":"public/archives/2016/07/index.html","hash":"161cc82b75c7398848fd22ad9c127b7ff050c382","modified":1525416703399},{"_id":"public/archives/2017/index.html","hash":"b810f4b0679e236f324c122bfa65eca5895b352f","modified":1525416703399},{"_id":"public/index.html","hash":"012db589e7b964074e3969cfb6f3806a95091fa4","modified":1525416703399},{"_id":"public/tags/Git/index.html","hash":"982ad780f2ac156fa26cf3d0cb7f104b780671fc","modified":1525416703400},{"_id":"public/2016/06/24/git的常用命令简介/index.html","hash":"0f36a3e136db0df6ff5fdd5c3cdd991ce9a47b21","modified":1525416703400},{"_id":"public/categories/react/index.html","hash":"b48d530c6d6f989199ccc4dfd8ec72a5a543185e","modified":1525416703429},{"_id":"public/2017/07/24/react最佳实践/index.html","hash":"cfefdf07fc789a55477ffe42e6b5591909282173","modified":1525416703429},{"_id":"public/tags/react/index.html","hash":"511ab22010d63b7ef52482302097375622bfdd31","modified":1525416703429},{"_id":"public/archives/2017/07/index.html","hash":"cdc1c56809caf26feaa9c1f8e6cf93802070cde8","modified":1525416703429},{"_id":"public/CNAME","hash":"a7d7367dbda80b03747a09e014f28072e97a1116","modified":1525416703429},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1525416703429},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1525416703429},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1525416703429},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1525416703429},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1525416703429},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1525416703429},{"_id":"public/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1525416703429},{"_id":"public/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1525416703429},{"_id":"public/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1525416703429},{"_id":"public/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1525416703430},{"_id":"public/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1525416703430},{"_id":"public/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1525416703430},{"_id":"public/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1525416703430},{"_id":"public/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1525416703430},{"_id":"public/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1525416703430},{"_id":"public/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1525416703430},{"_id":"public/img/author.jpg","hash":"b03bdafababe1dd3bb533719518e0a2d66b51b9d","modified":1525416703430},{"_id":"public/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1525416703430},{"_id":"public/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1525416703430},{"_id":"public/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1525416703430},{"_id":"public/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1525416703430},{"_id":"public/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1525416703430},{"_id":"public/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1525416703430},{"_id":"public/img/favicon.png","hash":"6658b5a8bbe2a31ceea767cdc28faedddd289285","modified":1525416703430},{"_id":"public/img/favicon.ico","hash":"df5708b7258bd6e690d8883c954152c8636cfa65","modified":1525416703430},{"_id":"public/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1525416703430},{"_id":"public/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1525416703430},{"_id":"public/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1525416703431},{"_id":"public/img/logo.png","hash":"b03bdafababe1dd3bb533719518e0a2d66b51b9d","modified":1525416703431},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1525416703431},{"_id":"public/assets/weixin.png","hash":"859cd451ffc3becad71e2550cd0fe4130e070a6d","modified":1525416703913},{"_id":"public/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1525416703914},{"_id":"public/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1525416703915},{"_id":"public/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1525416703915},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1525416703940},{"_id":"public/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1525416703940},{"_id":"public/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1525416703940},{"_id":"public/js/tagcloud.js","hash":"3adec98f4a68d40ecc2583769c48278a90421dd2","modified":1525416703940},{"_id":"public/js/toc.js","hash":"0451f0c1dc475186067cc19afc20c8e9ad3f02d7","modified":1525416703940},{"_id":"public/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1525416703940},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1525416703940},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1525416703940},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1525416703940},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1525416703940},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1525416703941},{"_id":"public/css/style.css","hash":"3a41aec96dd139ce1be346b354e4a76ee3ed06cb","modified":1525416703941},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1525416703941},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1525416703941},{"_id":"public/js/jekyll-search.js","hash":"b80e71eb664e5ed8545a887a073aa9fc5ee3fca2","modified":1525416703941},{"_id":"public/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1525416703941},{"_id":"public/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1525416703941},{"_id":"public/img/banner.jpg","hash":"650f9ffce2ba4a7d73defc464e483daf048edd07","modified":1525416703941},{"_id":"public/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1525416703942}],"Category":[{"name":"Git","_id":"cjgrlpx1l00031ofyw8dv0hvi"},{"name":"react","_id":"cjgrlpx1o00061ofy0o744t7k"}],"Data":[],"Page":[{"layout":"page","type":"page","title":"About me","_content":"\n80末程序员...\n微信:\n![](../assets/weixin.png)","source":"about/index.md","raw":"---\nlayout: page\ntype: page\ntitle: About me\n---\n\n80末程序员...\n微信:\n![](../assets/weixin.png)","date":"2018-03-13T10:09:15.000Z","updated":"2018-03-13T10:09:15.000Z","path":"about/index.html","comments":1,"_id":"cjgrlpx1i00011ofynbpij7ft","content":"<p>80末程序员…<br>微信:<br><img src=\"../assets/weixin.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>80末程序员…<br>微信:<br><img src=\"../assets/weixin.png\" alt=\"\"></p>\n"}],"Post":[{"layout":"post","title":"Git submodule的使用","tagline":"Supporting tagline","description":"Git作为一种流行的版本管理系统已经广泛应用于我们的日常开发中，在这里记录下日常遇到的关于git的常见用法，以备后续查询。","date":"2016-07-24T15:30:09.000Z","_content":"\n#### 遇到的问题\n\n\n\n\n\n","source":"_posts/git submodule的使用.md","raw":"---\nlayout: post\ntitle: Git submodule的使用\ncategory : Git\ntagline: \"Supporting tagline\"\ntags : [Git]\ndescription: Git作为一种流行的版本管理系统已经广泛应用于我们的日常开发中，在这里记录下日常遇到的关于git的常见用法，以备后续查询。\ndate: 2016-7-24 23:30:09\n---\n\n#### 遇到的问题\n\n\n\n\n\n","slug":"git submodule的使用","published":1,"updated":"2018-03-14T03:28:41.000Z","comments":1,"photos":[],"link":"","_id":"cjgrlpx1f00001ofyt1uwh1r9","content":"<h4 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h4>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h4>"},{"layout":"post","title":"React最佳实践","tagline":"Supporting tagline","description":"Git作为一种流行的版本管理系统已经广泛应用于我们的日常开发中，在这里记录下日常遇到的关于git的常见用法，以备后续查询。","date":"2017-07-24T15:30:09.000Z","_content":"\n##### propTypes书写顺序\n\n\n```\n//before\nclass Main extends React.Component {\n  render() {\n\n  }\n} \nMain.propTypes = {\n}\nMain.defaultTypes = {\n}\n\n//now\nclass Main extends React.Component {\n  static propTypes = {\n\n  }\n  static defaultTypes = {\n    \n  }\n  render() {\n\n  }\n}\n```\n\n\n\n\n\n\n\n","source":"_posts/react最佳实践.md","raw":"---\nlayout: post\ntitle: React最佳实践\ncategory : react\ntagline: \"Supporting tagline\"\ntags : [react]\ndescription: Git作为一种流行的版本管理系统已经广泛应用于我们的日常开发中，在这里记录下日常遇到的关于git的常见用法，以备后续查询。\ndate: 2017-7-24 23:30:09\n---\n\n##### propTypes书写顺序\n\n\n```\n//before\nclass Main extends React.Component {\n  render() {\n\n  }\n} \nMain.propTypes = {\n}\nMain.defaultTypes = {\n}\n\n//now\nclass Main extends React.Component {\n  static propTypes = {\n\n  }\n  static defaultTypes = {\n    \n  }\n  render() {\n\n  }\n}\n```\n\n\n\n\n\n\n\n","slug":"react最佳实践","published":1,"updated":"2018-05-04T09:56:45.000Z","_id":"cjgrlpx1j00021ofycyqjq11s","comments":1,"photos":[],"link":"","content":"<h5 id=\"propTypes书写顺序\"><a href=\"#propTypes书写顺序\" class=\"headerlink\" title=\"propTypes书写顺序\"></a>propTypes书写顺序</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//before</span><br><span class=\"line\">class Main extends React.Component &#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">Main.propTypes = &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Main.defaultTypes = &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//now</span><br><span class=\"line\">class Main extends React.Component &#123;</span><br><span class=\"line\">  static propTypes = &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  static defaultTypes = &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h5 id=\"propTypes书写顺序\"><a href=\"#propTypes书写顺序\" class=\"headerlink\" title=\"propTypes书写顺序\"></a>propTypes书写顺序</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//before</span><br><span class=\"line\">class Main extends React.Component &#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">Main.propTypes = &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Main.defaultTypes = &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//now</span><br><span class=\"line\">class Main extends React.Component &#123;</span><br><span class=\"line\">  static propTypes = &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  static defaultTypes = &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"Git常用命令","tagline":"Supporting tagline","description":"Git作为一种流行的版本管理系统已经广泛应用于我们的日常开发中，在这里记录下日常遇到的关于git的常见用法，以备后续查询。","date":"2016-06-24T15:30:09.000Z","_content":"\ngit的命令很多，为了减少后续查询的时间在这里列出了平常用到的一些命令。关于这些命令我们对git需要有一个基本的认识，如下图，git分为了几个区：\n- 工作区：\n#### 创建代码仓库\n\n```\n1）在当前文件夹创建仓库 \n$ git init \n\n2）新建文件夹并创建仓库\n$ git init [project-name]\n\n3）克隆远程分支，默认为master分支\n$ git clone [url] -b [branch-name] [your-folder]\n// 克隆远程dev分支到MyProject\n例: $ git clone https://github.com/fengyueran/Test.git -b dev MyProject\n```\n#### 配置\n\n通过git config可以配置git的环境变量，这些变量存在三个不同的地方\n- /etc/gitconfig文件：适用于所有用户。\n- ~/.gitconfig文件：适用于当前用户。\n- .git/config文件：\b当前项目中的配置文件，适用于当前项目。\n\n每一个级别的配置都会覆盖上层的相同配置，所以 .git/config 里的配置会覆/etc/gitconfig中的同名变量。\n```\n1）查看配置信息(包括用户名、邮箱等)\n$ git config --list\n\n2）编辑配置文件(--system/global)\n$ git config -e \n// 编辑当前用户的配置文件, --global:适用于当前用户， --system:适用于所有用户，不带参数: 当前项目\n例: $ git config -e --global\n\n3）设置当前用户信息\n$ git config --global user.name \"[name]\"\n$ git config --global user.email \"[email address]\"\n\n4）清除当前用户信息\n$ git config --unset --global user.name \"[name]\"\n$ git config --unset --global user.email \"[email address]\"\n```\n#### 文件\b操作\n```\n1）添加文件file1，file2...到暂存区\n$ git add [file1] [file2]\n\n2）添加当前目录所有文件到暂存区\n$ git add .\n\n3) 添加目录(包括子目录)到暂存区\n$ git add [dir]\n\n4) 删除当前目录没有track过的文件\n$ git clean -f\n\n5) 删除当前目录没有track过的文件和文件夹\n$ git clean -df\n\n6) 删除所有本地未提交的修改\n$ git checkout .\n\n7）提交暂存区到仓库区 \n$ git commit -m [message]\n\n8）追加到上一次提交 \n$ git commit --amend -m [message]\n\n```\n#### 查看信息\n```\n1）查看当前分支及其所有父类的提交历史\n$ git log \n\n2）可以查看所有分支的所有操作记录(包括已经被删除的commit记录和reset操作）\n$ git reflog\n\n3）查看变更的文件\n$ git status\n\n4）查看b\b提交相对a提交的差异\n$ git diff [a-commit] [b-commit]\n\n5）查看工作区与最新commit的前一次commit的差异，当从远程拉取更新时即可查看变动的内容。\n$ git diff HEAD^\n\n```\n#### 远程操作\n```\n1）列出远程仓库名\n$ git remote\n\n2）列出远程仓库名及对应的地址\n$ git remote –v  \n-> origin\tgit@github.com:fengyueran/iOSNote.git (fetch)\n-> origin\tgit@github.com:fengyueran/iOSNote.git (push)\n\n3）推送当前本地分支到远程分支\n$ git push [remote-repository-name] [branch-name]\n// 将当前分支dev推送到远程仓库origin的remoteDev分支\n例: $ git push origin dev:remoteDev\n ->   * [new branch]      dev -> remoteDev\n// 省略远程仓库分支名则在远程创建当前同名分支dev\n例: $ git push origin dev\n ->   * [new branch]      dev -> dev\n\n4）删除远程仓库origin的分支dev\n例: $ git push origin --delete dev\n\n5）添加远程仓库\n$ git remote add [repository] [url]\n// 在远程添加名为pb的仓库\n例: $ git remote add pb git://github.com/fengyueran/test.git\n\n6) 拉取远端数据\n// 使你与另一仓库同步，提取你本地所没有的数据，不merge，拉取下来的数据在.git/FETCH_HEAD下\n$ git fetch \n// 将你的仓库与远端仓库origin同步，提取所有它独有的数据到本地分支以合并或者怎样。\n$ git fetch origin\n// 下面的fetch操作使用远程dev分支在本地创建localDev分支(但不会切换到该分支)，如果本地不存在localDev分支,则会自动创建一个新的localDev分支,\n如果本地存在localDev分支, 并且是`fast forward', 则自动合并两个分支, 否则, 会阻止以上操作。\n$ git fetch origin dev:localDev\n-> * [new branch]      dev        -> localDev\n\n7）从远程仓库提取数据并尝试合并到当前分支\n// 基本上，该命令就是在git fetch之后紧接着git merge远端分支到当前分支\n$ git pull \n\n//当新建分支时，如果直接pull或push需要参数远程仓库名和分支名\n$ git pull origin dev\n如果想省略仓库名和分支名则需要建立追踪关系，执行如下命令\n$ git pull --set-upstream origin dev\n\n\n//merge操作会生成一个新的节点，之前的提交分开显示。而rebase操作不会生成新的节点, 因而能产生一个更为整洁的提交历史\n$ git pull --rebase\n//假设提交线图在执行pull前是这样的：\n      C1---D1---E1  remotes/origin/master\n      /\n  A---B---C2---D2  master\n执行git pull则提交线图会变成这样：\n      C1---D1---E1  remotes/origin/master\n      /          \\\n  A---B---C2---D2-F  master\n即会产生一个多余的合并历史，\n如果执行git pull --rebase则提交线图会变成这样：\n    remotes/origin/master\n                  |\n  A---B---C1---D1---C2'---D2'  master\n可以看到，应用rebase则不会有新的提交F。C2,D2删除后重新提交为C2',D2'了。\n```\n\n#### 分支操作\n\n```\n1）查看本地分支\n$ git branch\n\n2）查看远程分支,远程分支会用红色表示出来(如果你开了颜色支持的话）\n$ git branch -r\n\n3）新建分支\n$ git branch [branch-name]\n例: $ git branch dev\n\n4）切换分支\n$ git checkout [branch-name]\n例: $ git checkout dev\n\n5）新建并切换分支 \n$ git checkout -b [branch-name]\n// 当前分支的记录都会到新分支dev上\n例: $ git checkout -b dev\n\n6）删除分支 \n$ git branch -D [branch-name]\n\n7）叫起合并冲突工具kdiff3\n$ git mergetool -t kdiff3\n\n8) 合并某个分支到当前分支\n// 如果不是`fast forward'则会产生合并的提交历史\n$ git merge [branch-name]\n// 将hotfix分支合并到当前分支\n例: $ git merge hotfix\n// 无论是否是`fast forward'都产生合并的提交历史\n例: $ git merge hotfix --no-f\n\n9) 选择任意一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n10）合并提交历史 \n// 当我们由master分支切换到新的分支dev工作，工作结束后想merge回master，如果直接在master应用git merge dev，\ndev的提交历史就会出现在master中，有时这些记录很琐碎没有必要添加到master上，用squash就能解决这一问题。\na:squash后dev上的提交就变成了新的文件\n  $ git merge --squash dev\nb:重新commit代替之前所有提交\n  $ git commit -m \"dev\"\n\n```\n#### 版本回退\n\n```\n1）储存临时文件\n//当工作区有未提交的文件，又想切换到另一个branch时就可以用git stash暂时存储\n$ git stash \n\n2）查看存储了哪些文件\n$ git stash list\n\n3）应用存储的临时文件\n// 当回到之前的dirty工作区时可以通过git stash apply来恢复之前未提交的文件，也可以在其他branch应用这些存储的临时文件\n$ git stash apply\n\n4) 让单个文件回退到指定的版本\na:进入到文件所在文件目录，或者能找到文件的路径\n  $ git reflog test.js\n  -> 60e207a (HEAD -> master) HEAD@{0}: commit: test.js +2\n     1435819 HEAD@{1}: commit: test.js +1\nb:回退到指定的版本\n  $  git reset 1435819 test.js\n\n```\n#### tag\n\n```\n1) 轻量级tag\n$ git tag [version]\n例: $ git tag v1.0.0\n \n2) 创建一个含附注类型的标签非常简单\n$ git tag -a [version] -m \"[detail]\"\n$ git tag -a v1.1.1 -m \"CuraCloudMI version 1.1.1\"\n\n3) 查看tag\n$ git show [version]\n\n4) 删除tag\ngit tag -d [version]\n```\n#### 其他\n```\n1) 查看某个命令的帮助\ngit help [command-name]\n\n2) 保留空文件\n在空文件夹中新建.gitkeep文件\n\n3) 忽略某些文件\n在.gitignore文件中添加需要忽略的文件夹或文件\n例: \n//忽略Pods文件夹下的所有文件\nplatforms/ios/Pods\n\n//忽略www下的所有文件除了plugins\nplatforms/ios/www/*\n!platforms/ios/www/plugins\n\n```\n\n\n\n\n\n\n","source":"_posts/git的常用命令简介.md","raw":"---\nlayout: post\ntitle: Git常用命令\ncategory : Git\ntagline: \"Supporting tagline\"\ntags : [Git]\ndescription: Git作为一种流行的版本管理系统已经广泛应用于我们的日常开发中，在这里记录下日常遇到的关于git的常见用法，以备后续查询。\ndate: 2016-6-24 23:30:09\n---\n\ngit的命令很多，为了减少后续查询的时间在这里列出了平常用到的一些命令。关于这些命令我们对git需要有一个基本的认识，如下图，git分为了几个区：\n- 工作区：\n#### 创建代码仓库\n\n```\n1）在当前文件夹创建仓库 \n$ git init \n\n2）新建文件夹并创建仓库\n$ git init [project-name]\n\n3）克隆远程分支，默认为master分支\n$ git clone [url] -b [branch-name] [your-folder]\n// 克隆远程dev分支到MyProject\n例: $ git clone https://github.com/fengyueran/Test.git -b dev MyProject\n```\n#### 配置\n\n通过git config可以配置git的环境变量，这些变量存在三个不同的地方\n- /etc/gitconfig文件：适用于所有用户。\n- ~/.gitconfig文件：适用于当前用户。\n- .git/config文件：\b当前项目中的配置文件，适用于当前项目。\n\n每一个级别的配置都会覆盖上层的相同配置，所以 .git/config 里的配置会覆/etc/gitconfig中的同名变量。\n```\n1）查看配置信息(包括用户名、邮箱等)\n$ git config --list\n\n2）编辑配置文件(--system/global)\n$ git config -e \n// 编辑当前用户的配置文件, --global:适用于当前用户， --system:适用于所有用户，不带参数: 当前项目\n例: $ git config -e --global\n\n3）设置当前用户信息\n$ git config --global user.name \"[name]\"\n$ git config --global user.email \"[email address]\"\n\n4）清除当前用户信息\n$ git config --unset --global user.name \"[name]\"\n$ git config --unset --global user.email \"[email address]\"\n```\n#### 文件\b操作\n```\n1）添加文件file1，file2...到暂存区\n$ git add [file1] [file2]\n\n2）添加当前目录所有文件到暂存区\n$ git add .\n\n3) 添加目录(包括子目录)到暂存区\n$ git add [dir]\n\n4) 删除当前目录没有track过的文件\n$ git clean -f\n\n5) 删除当前目录没有track过的文件和文件夹\n$ git clean -df\n\n6) 删除所有本地未提交的修改\n$ git checkout .\n\n7）提交暂存区到仓库区 \n$ git commit -m [message]\n\n8）追加到上一次提交 \n$ git commit --amend -m [message]\n\n```\n#### 查看信息\n```\n1）查看当前分支及其所有父类的提交历史\n$ git log \n\n2）可以查看所有分支的所有操作记录(包括已经被删除的commit记录和reset操作）\n$ git reflog\n\n3）查看变更的文件\n$ git status\n\n4）查看b\b提交相对a提交的差异\n$ git diff [a-commit] [b-commit]\n\n5）查看工作区与最新commit的前一次commit的差异，当从远程拉取更新时即可查看变动的内容。\n$ git diff HEAD^\n\n```\n#### 远程操作\n```\n1）列出远程仓库名\n$ git remote\n\n2）列出远程仓库名及对应的地址\n$ git remote –v  \n-> origin\tgit@github.com:fengyueran/iOSNote.git (fetch)\n-> origin\tgit@github.com:fengyueran/iOSNote.git (push)\n\n3）推送当前本地分支到远程分支\n$ git push [remote-repository-name] [branch-name]\n// 将当前分支dev推送到远程仓库origin的remoteDev分支\n例: $ git push origin dev:remoteDev\n ->   * [new branch]      dev -> remoteDev\n// 省略远程仓库分支名则在远程创建当前同名分支dev\n例: $ git push origin dev\n ->   * [new branch]      dev -> dev\n\n4）删除远程仓库origin的分支dev\n例: $ git push origin --delete dev\n\n5）添加远程仓库\n$ git remote add [repository] [url]\n// 在远程添加名为pb的仓库\n例: $ git remote add pb git://github.com/fengyueran/test.git\n\n6) 拉取远端数据\n// 使你与另一仓库同步，提取你本地所没有的数据，不merge，拉取下来的数据在.git/FETCH_HEAD下\n$ git fetch \n// 将你的仓库与远端仓库origin同步，提取所有它独有的数据到本地分支以合并或者怎样。\n$ git fetch origin\n// 下面的fetch操作使用远程dev分支在本地创建localDev分支(但不会切换到该分支)，如果本地不存在localDev分支,则会自动创建一个新的localDev分支,\n如果本地存在localDev分支, 并且是`fast forward', 则自动合并两个分支, 否则, 会阻止以上操作。\n$ git fetch origin dev:localDev\n-> * [new branch]      dev        -> localDev\n\n7）从远程仓库提取数据并尝试合并到当前分支\n// 基本上，该命令就是在git fetch之后紧接着git merge远端分支到当前分支\n$ git pull \n\n//当新建分支时，如果直接pull或push需要参数远程仓库名和分支名\n$ git pull origin dev\n如果想省略仓库名和分支名则需要建立追踪关系，执行如下命令\n$ git pull --set-upstream origin dev\n\n\n//merge操作会生成一个新的节点，之前的提交分开显示。而rebase操作不会生成新的节点, 因而能产生一个更为整洁的提交历史\n$ git pull --rebase\n//假设提交线图在执行pull前是这样的：\n      C1---D1---E1  remotes/origin/master\n      /\n  A---B---C2---D2  master\n执行git pull则提交线图会变成这样：\n      C1---D1---E1  remotes/origin/master\n      /          \\\n  A---B---C2---D2-F  master\n即会产生一个多余的合并历史，\n如果执行git pull --rebase则提交线图会变成这样：\n    remotes/origin/master\n                  |\n  A---B---C1---D1---C2'---D2'  master\n可以看到，应用rebase则不会有新的提交F。C2,D2删除后重新提交为C2',D2'了。\n```\n\n#### 分支操作\n\n```\n1）查看本地分支\n$ git branch\n\n2）查看远程分支,远程分支会用红色表示出来(如果你开了颜色支持的话）\n$ git branch -r\n\n3）新建分支\n$ git branch [branch-name]\n例: $ git branch dev\n\n4）切换分支\n$ git checkout [branch-name]\n例: $ git checkout dev\n\n5）新建并切换分支 \n$ git checkout -b [branch-name]\n// 当前分支的记录都会到新分支dev上\n例: $ git checkout -b dev\n\n6）删除分支 \n$ git branch -D [branch-name]\n\n7）叫起合并冲突工具kdiff3\n$ git mergetool -t kdiff3\n\n8) 合并某个分支到当前分支\n// 如果不是`fast forward'则会产生合并的提交历史\n$ git merge [branch-name]\n// 将hotfix分支合并到当前分支\n例: $ git merge hotfix\n// 无论是否是`fast forward'都产生合并的提交历史\n例: $ git merge hotfix --no-f\n\n9) 选择任意一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n10）合并提交历史 \n// 当我们由master分支切换到新的分支dev工作，工作结束后想merge回master，如果直接在master应用git merge dev，\ndev的提交历史就会出现在master中，有时这些记录很琐碎没有必要添加到master上，用squash就能解决这一问题。\na:squash后dev上的提交就变成了新的文件\n  $ git merge --squash dev\nb:重新commit代替之前所有提交\n  $ git commit -m \"dev\"\n\n```\n#### 版本回退\n\n```\n1）储存临时文件\n//当工作区有未提交的文件，又想切换到另一个branch时就可以用git stash暂时存储\n$ git stash \n\n2）查看存储了哪些文件\n$ git stash list\n\n3）应用存储的临时文件\n// 当回到之前的dirty工作区时可以通过git stash apply来恢复之前未提交的文件，也可以在其他branch应用这些存储的临时文件\n$ git stash apply\n\n4) 让单个文件回退到指定的版本\na:进入到文件所在文件目录，或者能找到文件的路径\n  $ git reflog test.js\n  -> 60e207a (HEAD -> master) HEAD@{0}: commit: test.js +2\n     1435819 HEAD@{1}: commit: test.js +1\nb:回退到指定的版本\n  $  git reset 1435819 test.js\n\n```\n#### tag\n\n```\n1) 轻量级tag\n$ git tag [version]\n例: $ git tag v1.0.0\n \n2) 创建一个含附注类型的标签非常简单\n$ git tag -a [version] -m \"[detail]\"\n$ git tag -a v1.1.1 -m \"CuraCloudMI version 1.1.1\"\n\n3) 查看tag\n$ git show [version]\n\n4) 删除tag\ngit tag -d [version]\n```\n#### 其他\n```\n1) 查看某个命令的帮助\ngit help [command-name]\n\n2) 保留空文件\n在空文件夹中新建.gitkeep文件\n\n3) 忽略某些文件\n在.gitignore文件中添加需要忽略的文件夹或文件\n例: \n//忽略Pods文件夹下的所有文件\nplatforms/ios/Pods\n\n//忽略www下的所有文件除了plugins\nplatforms/ios/www/*\n!platforms/ios/www/plugins\n\n```\n\n\n\n\n\n\n","slug":"git的常用命令简介","published":1,"updated":"2018-05-04T06:21:12.000Z","comments":1,"photos":[],"link":"","_id":"cjgrlpx1n00051ofyhhkdrkjy","content":"<p>git的命令很多，为了减少后续查询的时间在这里列出了平常用到的一些命令。关于这些命令我们对git需要有一个基本的认识，如下图，git分为了几个区：</p>\n<ul>\n<li>工作区：<h4 id=\"创建代码仓库\"><a href=\"#创建代码仓库\" class=\"headerlink\" title=\"创建代码仓库\"></a>创建代码仓库</h4></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）在当前文件夹创建仓库 </span><br><span class=\"line\">$ git init </span><br><span class=\"line\"></span><br><span class=\"line\">2）新建文件夹并创建仓库</span><br><span class=\"line\">$ git init [project-name]</span><br><span class=\"line\"></span><br><span class=\"line\">3）克隆远程分支，默认为master分支</span><br><span class=\"line\">$ git clone [url] -b [branch-name] [your-folder]</span><br><span class=\"line\">// 克隆远程dev分支到MyProject</span><br><span class=\"line\">例: $ git clone https://github.com/fengyueran/Test.git -b dev MyProject</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><p>通过git config可以配置git的环境变量，这些变量存在三个不同的地方</p>\n<ul>\n<li>/etc/gitconfig文件：适用于所有用户。</li>\n<li>~/.gitconfig文件：适用于当前用户。</li>\n<li>.git/config文件：\b当前项目中的配置文件，适用于当前项目。</li>\n</ul>\n<p>每一个级别的配置都会覆盖上层的相同配置，所以 .git/config 里的配置会覆/etc/gitconfig中的同名变量。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）查看配置信息(包括用户名、邮箱等)</span><br><span class=\"line\">$ git config --list</span><br><span class=\"line\"></span><br><span class=\"line\">2）编辑配置文件(--system/global)</span><br><span class=\"line\">$ git config -e </span><br><span class=\"line\">// 编辑当前用户的配置文件, --global:适用于当前用户， --system:适用于所有用户，不带参数: 当前项目</span><br><span class=\"line\">例: $ git config -e --global</span><br><span class=\"line\"></span><br><span class=\"line\">3）设置当前用户信息</span><br><span class=\"line\">$ git config --global user.name &quot;[name]&quot;</span><br><span class=\"line\">$ git config --global user.email &quot;[email address]&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">4）清除当前用户信息</span><br><span class=\"line\">$ git config --unset --global user.name &quot;[name]&quot;</span><br><span class=\"line\">$ git config --unset --global user.email &quot;[email address]&quot;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"文件操作\"><a href=\"#文件操作\" class=\"headerlink\" title=\"文件\b操作\"></a>文件\b操作</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）添加文件file1，file2...到暂存区</span><br><span class=\"line\">$ git add [file1] [file2]</span><br><span class=\"line\"></span><br><span class=\"line\">2）添加当前目录所有文件到暂存区</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\"></span><br><span class=\"line\">3) 添加目录(包括子目录)到暂存区</span><br><span class=\"line\">$ git add [dir]</span><br><span class=\"line\"></span><br><span class=\"line\">4) 删除当前目录没有track过的文件</span><br><span class=\"line\">$ git clean -f</span><br><span class=\"line\"></span><br><span class=\"line\">5) 删除当前目录没有track过的文件和文件夹</span><br><span class=\"line\">$ git clean -df</span><br><span class=\"line\"></span><br><span class=\"line\">6) 删除所有本地未提交的修改</span><br><span class=\"line\">$ git checkout .</span><br><span class=\"line\"></span><br><span class=\"line\">7）提交暂存区到仓库区 </span><br><span class=\"line\">$ git commit -m [message]</span><br><span class=\"line\"></span><br><span class=\"line\">8）追加到上一次提交 </span><br><span class=\"line\">$ git commit --amend -m [message]</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看信息\"><a href=\"#查看信息\" class=\"headerlink\" title=\"查看信息\"></a>查看信息</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）查看当前分支及其所有父类的提交历史</span><br><span class=\"line\">$ git log </span><br><span class=\"line\"></span><br><span class=\"line\">2）可以查看所有分支的所有操作记录(包括已经被删除的commit记录和reset操作）</span><br><span class=\"line\">$ git reflog</span><br><span class=\"line\"></span><br><span class=\"line\">3）查看变更的文件</span><br><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\">4）查看b\b提交相对a提交的差异</span><br><span class=\"line\">$ git diff [a-commit] [b-commit]</span><br><span class=\"line\"></span><br><span class=\"line\">5）查看工作区与最新commit的前一次commit的差异，当从远程拉取更新时即可查看变动的内容。</span><br><span class=\"line\">$ git diff HEAD^</span><br></pre></td></tr></table></figure>\n<h4 id=\"远程操作\"><a href=\"#远程操作\" class=\"headerlink\" title=\"远程操作\"></a>远程操作</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）列出远程仓库名</span><br><span class=\"line\">$ git remote</span><br><span class=\"line\"></span><br><span class=\"line\">2）列出远程仓库名及对应的地址</span><br><span class=\"line\">$ git remote –v  </span><br><span class=\"line\">-&gt; origin\tgit@github.com:fengyueran/iOSNote.git (fetch)</span><br><span class=\"line\">-&gt; origin\tgit@github.com:fengyueran/iOSNote.git (push)</span><br><span class=\"line\"></span><br><span class=\"line\">3）推送当前本地分支到远程分支</span><br><span class=\"line\">$ git push [remote-repository-name] [branch-name]</span><br><span class=\"line\">// 将当前分支dev推送到远程仓库origin的remoteDev分支</span><br><span class=\"line\">例: $ git push origin dev:remoteDev</span><br><span class=\"line\"> -&gt;   * [new branch]      dev -&gt; remoteDev</span><br><span class=\"line\">// 省略远程仓库分支名则在远程创建当前同名分支dev</span><br><span class=\"line\">例: $ git push origin dev</span><br><span class=\"line\"> -&gt;   * [new branch]      dev -&gt; dev</span><br><span class=\"line\"></span><br><span class=\"line\">4）删除远程仓库origin的分支dev</span><br><span class=\"line\">例: $ git push origin --delete dev</span><br><span class=\"line\"></span><br><span class=\"line\">5）添加远程仓库</span><br><span class=\"line\">$ git remote add [repository] [url]</span><br><span class=\"line\">// 在远程添加名为pb的仓库</span><br><span class=\"line\">例: $ git remote add pb git://github.com/fengyueran/test.git</span><br><span class=\"line\"></span><br><span class=\"line\">6) 拉取远端数据</span><br><span class=\"line\">// 使你与另一仓库同步，提取你本地所没有的数据，不merge，拉取下来的数据在.git/FETCH_HEAD下</span><br><span class=\"line\">$ git fetch </span><br><span class=\"line\">// 将你的仓库与远端仓库origin同步，提取所有它独有的数据到本地分支以合并或者怎样。</span><br><span class=\"line\">$ git fetch origin</span><br><span class=\"line\">// 下面的fetch操作使用远程dev分支在本地创建localDev分支(但不会切换到该分支)，如果本地不存在localDev分支,则会自动创建一个新的localDev分支,</span><br><span class=\"line\">如果本地存在localDev分支, 并且是`fast forward&apos;, 则自动合并两个分支, 否则, 会阻止以上操作。</span><br><span class=\"line\">$ git fetch origin dev:localDev</span><br><span class=\"line\">-&gt; * [new branch]      dev        -&gt; localDev</span><br><span class=\"line\"></span><br><span class=\"line\">7）从远程仓库提取数据并尝试合并到当前分支</span><br><span class=\"line\">// 基本上，该命令就是在git fetch之后紧接着git merge远端分支到当前分支</span><br><span class=\"line\">$ git pull </span><br><span class=\"line\"></span><br><span class=\"line\">//当新建分支时，如果直接pull或push需要参数远程仓库名和分支名</span><br><span class=\"line\">$ git pull origin dev</span><br><span class=\"line\">如果想省略仓库名和分支名则需要建立追踪关系，执行如下命令</span><br><span class=\"line\">$ git pull --set-upstream origin dev</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//merge操作会生成一个新的节点，之前的提交分开显示。而rebase操作不会生成新的节点, 因而能产生一个更为整洁的提交历史</span><br><span class=\"line\">$ git pull --rebase</span><br><span class=\"line\">//假设提交线图在执行pull前是这样的：</span><br><span class=\"line\">      C1---D1---E1  remotes/origin/master</span><br><span class=\"line\">      /</span><br><span class=\"line\">  A---B---C2---D2  master</span><br><span class=\"line\">执行git pull则提交线图会变成这样：</span><br><span class=\"line\">      C1---D1---E1  remotes/origin/master</span><br><span class=\"line\">      /          \\</span><br><span class=\"line\">  A---B---C2---D2-F  master</span><br><span class=\"line\">即会产生一个多余的合并历史，</span><br><span class=\"line\">如果执行git pull --rebase则提交线图会变成这样：</span><br><span class=\"line\">    remotes/origin/master</span><br><span class=\"line\">                  |</span><br><span class=\"line\">  A---B---C1---D1---C2&apos;---D2&apos;  master</span><br><span class=\"line\">可以看到，应用rebase则不会有新的提交F。C2,D2删除后重新提交为C2&apos;,D2&apos;了。</span><br></pre></td></tr></table></figure>\n<h4 id=\"分支操作\"><a href=\"#分支操作\" class=\"headerlink\" title=\"分支操作\"></a>分支操作</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）查看本地分支</span><br><span class=\"line\">$ git branch</span><br><span class=\"line\"></span><br><span class=\"line\">2）查看远程分支,远程分支会用红色表示出来(如果你开了颜色支持的话）</span><br><span class=\"line\">$ git branch -r</span><br><span class=\"line\"></span><br><span class=\"line\">3）新建分支</span><br><span class=\"line\">$ git branch [branch-name]</span><br><span class=\"line\">例: $ git branch dev</span><br><span class=\"line\"></span><br><span class=\"line\">4）切换分支</span><br><span class=\"line\">$ git checkout [branch-name]</span><br><span class=\"line\">例: $ git checkout dev</span><br><span class=\"line\"></span><br><span class=\"line\">5）新建并切换分支 </span><br><span class=\"line\">$ git checkout -b [branch-name]</span><br><span class=\"line\">// 当前分支的记录都会到新分支dev上</span><br><span class=\"line\">例: $ git checkout -b dev</span><br><span class=\"line\"></span><br><span class=\"line\">6）删除分支 </span><br><span class=\"line\">$ git branch -D [branch-name]</span><br><span class=\"line\"></span><br><span class=\"line\">7）叫起合并冲突工具kdiff3</span><br><span class=\"line\">$ git mergetool -t kdiff3</span><br><span class=\"line\"></span><br><span class=\"line\">8) 合并某个分支到当前分支</span><br><span class=\"line\">// 如果不是`fast forward&apos;则会产生合并的提交历史</span><br><span class=\"line\">$ git merge [branch-name]</span><br><span class=\"line\">// 将hotfix分支合并到当前分支</span><br><span class=\"line\">例: $ git merge hotfix</span><br><span class=\"line\">// 无论是否是`fast forward&apos;都产生合并的提交历史</span><br><span class=\"line\">例: $ git merge hotfix --no-f</span><br><span class=\"line\"></span><br><span class=\"line\">9) 选择任意一个commit，合并进当前分支</span><br><span class=\"line\">$ git cherry-pick [commit]</span><br><span class=\"line\"></span><br><span class=\"line\">10）合并提交历史 </span><br><span class=\"line\">// 当我们由master分支切换到新的分支dev工作，工作结束后想merge回master，如果直接在master应用git merge dev，</span><br><span class=\"line\">dev的提交历史就会出现在master中，有时这些记录很琐碎没有必要添加到master上，用squash就能解决这一问题。</span><br><span class=\"line\">a:squash后dev上的提交就变成了新的文件</span><br><span class=\"line\">  $ git merge --squash dev</span><br><span class=\"line\">b:重新commit代替之前所有提交</span><br><span class=\"line\">  $ git commit -m &quot;dev&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"版本回退\"><a href=\"#版本回退\" class=\"headerlink\" title=\"版本回退\"></a>版本回退</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）储存临时文件</span><br><span class=\"line\">//当工作区有未提交的文件，又想切换到另一个branch时就可以用git stash暂时存储</span><br><span class=\"line\">$ git stash </span><br><span class=\"line\"></span><br><span class=\"line\">2）查看存储了哪些文件</span><br><span class=\"line\">$ git stash list</span><br><span class=\"line\"></span><br><span class=\"line\">3）应用存储的临时文件</span><br><span class=\"line\">// 当回到之前的dirty工作区时可以通过git stash apply来恢复之前未提交的文件，也可以在其他branch应用这些存储的临时文件</span><br><span class=\"line\">$ git stash apply</span><br><span class=\"line\"></span><br><span class=\"line\">4) 让单个文件回退到指定的版本</span><br><span class=\"line\">a:进入到文件所在文件目录，或者能找到文件的路径</span><br><span class=\"line\">  $ git reflog test.js</span><br><span class=\"line\">  -&gt; 60e207a (HEAD -&gt; master) HEAD@&#123;0&#125;: commit: test.js +2</span><br><span class=\"line\">     1435819 HEAD@&#123;1&#125;: commit: test.js +1</span><br><span class=\"line\">b:回退到指定的版本</span><br><span class=\"line\">  $  git reset 1435819 test.js</span><br></pre></td></tr></table></figure>\n<h4 id=\"tag\"><a href=\"#tag\" class=\"headerlink\" title=\"tag\"></a>tag</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1) 轻量级tag</span><br><span class=\"line\">$ git tag [version]</span><br><span class=\"line\">例: $ git tag v1.0.0</span><br><span class=\"line\"> </span><br><span class=\"line\">2) 创建一个含附注类型的标签非常简单</span><br><span class=\"line\">$ git tag -a [version] -m &quot;[detail]&quot;</span><br><span class=\"line\">$ git tag -a v1.1.1 -m &quot;CuraCloudMI version 1.1.1&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">3) 查看tag</span><br><span class=\"line\">$ git show [version]</span><br><span class=\"line\"></span><br><span class=\"line\">4) 删除tag</span><br><span class=\"line\">git tag -d [version]</span><br></pre></td></tr></table></figure>\n<h4 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1) 查看某个命令的帮助</span><br><span class=\"line\">git help [command-name]</span><br><span class=\"line\"></span><br><span class=\"line\">2) 保留空文件</span><br><span class=\"line\">在空文件夹中新建.gitkeep文件</span><br><span class=\"line\"></span><br><span class=\"line\">3) 忽略某些文件</span><br><span class=\"line\">在.gitignore文件中添加需要忽略的文件夹或文件</span><br><span class=\"line\">例: </span><br><span class=\"line\">//忽略Pods文件夹下的所有文件</span><br><span class=\"line\">platforms/ios/Pods</span><br><span class=\"line\"></span><br><span class=\"line\">//忽略www下的所有文件除了plugins</span><br><span class=\"line\">platforms/ios/www/*</span><br><span class=\"line\">!platforms/ios/www/plugins</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>git的命令很多，为了减少后续查询的时间在这里列出了平常用到的一些命令。关于这些命令我们对git需要有一个基本的认识，如下图，git分为了几个区：</p>\n<ul>\n<li>工作区：<h4 id=\"创建代码仓库\"><a href=\"#创建代码仓库\" class=\"headerlink\" title=\"创建代码仓库\"></a>创建代码仓库</h4></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）在当前文件夹创建仓库 </span><br><span class=\"line\">$ git init </span><br><span class=\"line\"></span><br><span class=\"line\">2）新建文件夹并创建仓库</span><br><span class=\"line\">$ git init [project-name]</span><br><span class=\"line\"></span><br><span class=\"line\">3）克隆远程分支，默认为master分支</span><br><span class=\"line\">$ git clone [url] -b [branch-name] [your-folder]</span><br><span class=\"line\">// 克隆远程dev分支到MyProject</span><br><span class=\"line\">例: $ git clone https://github.com/fengyueran/Test.git -b dev MyProject</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><p>通过git config可以配置git的环境变量，这些变量存在三个不同的地方</p>\n<ul>\n<li>/etc/gitconfig文件：适用于所有用户。</li>\n<li>~/.gitconfig文件：适用于当前用户。</li>\n<li>.git/config文件：\b当前项目中的配置文件，适用于当前项目。</li>\n</ul>\n<p>每一个级别的配置都会覆盖上层的相同配置，所以 .git/config 里的配置会覆/etc/gitconfig中的同名变量。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）查看配置信息(包括用户名、邮箱等)</span><br><span class=\"line\">$ git config --list</span><br><span class=\"line\"></span><br><span class=\"line\">2）编辑配置文件(--system/global)</span><br><span class=\"line\">$ git config -e </span><br><span class=\"line\">// 编辑当前用户的配置文件, --global:适用于当前用户， --system:适用于所有用户，不带参数: 当前项目</span><br><span class=\"line\">例: $ git config -e --global</span><br><span class=\"line\"></span><br><span class=\"line\">3）设置当前用户信息</span><br><span class=\"line\">$ git config --global user.name &quot;[name]&quot;</span><br><span class=\"line\">$ git config --global user.email &quot;[email address]&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">4）清除当前用户信息</span><br><span class=\"line\">$ git config --unset --global user.name &quot;[name]&quot;</span><br><span class=\"line\">$ git config --unset --global user.email &quot;[email address]&quot;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"文件操作\"><a href=\"#文件操作\" class=\"headerlink\" title=\"文件\b操作\"></a>文件\b操作</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）添加文件file1，file2...到暂存区</span><br><span class=\"line\">$ git add [file1] [file2]</span><br><span class=\"line\"></span><br><span class=\"line\">2）添加当前目录所有文件到暂存区</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\"></span><br><span class=\"line\">3) 添加目录(包括子目录)到暂存区</span><br><span class=\"line\">$ git add [dir]</span><br><span class=\"line\"></span><br><span class=\"line\">4) 删除当前目录没有track过的文件</span><br><span class=\"line\">$ git clean -f</span><br><span class=\"line\"></span><br><span class=\"line\">5) 删除当前目录没有track过的文件和文件夹</span><br><span class=\"line\">$ git clean -df</span><br><span class=\"line\"></span><br><span class=\"line\">6) 删除所有本地未提交的修改</span><br><span class=\"line\">$ git checkout .</span><br><span class=\"line\"></span><br><span class=\"line\">7）提交暂存区到仓库区 </span><br><span class=\"line\">$ git commit -m [message]</span><br><span class=\"line\"></span><br><span class=\"line\">8）追加到上一次提交 </span><br><span class=\"line\">$ git commit --amend -m [message]</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看信息\"><a href=\"#查看信息\" class=\"headerlink\" title=\"查看信息\"></a>查看信息</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）查看当前分支及其所有父类的提交历史</span><br><span class=\"line\">$ git log </span><br><span class=\"line\"></span><br><span class=\"line\">2）可以查看所有分支的所有操作记录(包括已经被删除的commit记录和reset操作）</span><br><span class=\"line\">$ git reflog</span><br><span class=\"line\"></span><br><span class=\"line\">3）查看变更的文件</span><br><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\">4）查看b\b提交相对a提交的差异</span><br><span class=\"line\">$ git diff [a-commit] [b-commit]</span><br><span class=\"line\"></span><br><span class=\"line\">5）查看工作区与最新commit的前一次commit的差异，当从远程拉取更新时即可查看变动的内容。</span><br><span class=\"line\">$ git diff HEAD^</span><br></pre></td></tr></table></figure>\n<h4 id=\"远程操作\"><a href=\"#远程操作\" class=\"headerlink\" title=\"远程操作\"></a>远程操作</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）列出远程仓库名</span><br><span class=\"line\">$ git remote</span><br><span class=\"line\"></span><br><span class=\"line\">2）列出远程仓库名及对应的地址</span><br><span class=\"line\">$ git remote –v  </span><br><span class=\"line\">-&gt; origin\tgit@github.com:fengyueran/iOSNote.git (fetch)</span><br><span class=\"line\">-&gt; origin\tgit@github.com:fengyueran/iOSNote.git (push)</span><br><span class=\"line\"></span><br><span class=\"line\">3）推送当前本地分支到远程分支</span><br><span class=\"line\">$ git push [remote-repository-name] [branch-name]</span><br><span class=\"line\">// 将当前分支dev推送到远程仓库origin的remoteDev分支</span><br><span class=\"line\">例: $ git push origin dev:remoteDev</span><br><span class=\"line\"> -&gt;   * [new branch]      dev -&gt; remoteDev</span><br><span class=\"line\">// 省略远程仓库分支名则在远程创建当前同名分支dev</span><br><span class=\"line\">例: $ git push origin dev</span><br><span class=\"line\"> -&gt;   * [new branch]      dev -&gt; dev</span><br><span class=\"line\"></span><br><span class=\"line\">4）删除远程仓库origin的分支dev</span><br><span class=\"line\">例: $ git push origin --delete dev</span><br><span class=\"line\"></span><br><span class=\"line\">5）添加远程仓库</span><br><span class=\"line\">$ git remote add [repository] [url]</span><br><span class=\"line\">// 在远程添加名为pb的仓库</span><br><span class=\"line\">例: $ git remote add pb git://github.com/fengyueran/test.git</span><br><span class=\"line\"></span><br><span class=\"line\">6) 拉取远端数据</span><br><span class=\"line\">// 使你与另一仓库同步，提取你本地所没有的数据，不merge，拉取下来的数据在.git/FETCH_HEAD下</span><br><span class=\"line\">$ git fetch </span><br><span class=\"line\">// 将你的仓库与远端仓库origin同步，提取所有它独有的数据到本地分支以合并或者怎样。</span><br><span class=\"line\">$ git fetch origin</span><br><span class=\"line\">// 下面的fetch操作使用远程dev分支在本地创建localDev分支(但不会切换到该分支)，如果本地不存在localDev分支,则会自动创建一个新的localDev分支,</span><br><span class=\"line\">如果本地存在localDev分支, 并且是`fast forward&apos;, 则自动合并两个分支, 否则, 会阻止以上操作。</span><br><span class=\"line\">$ git fetch origin dev:localDev</span><br><span class=\"line\">-&gt; * [new branch]      dev        -&gt; localDev</span><br><span class=\"line\"></span><br><span class=\"line\">7）从远程仓库提取数据并尝试合并到当前分支</span><br><span class=\"line\">// 基本上，该命令就是在git fetch之后紧接着git merge远端分支到当前分支</span><br><span class=\"line\">$ git pull </span><br><span class=\"line\"></span><br><span class=\"line\">//当新建分支时，如果直接pull或push需要参数远程仓库名和分支名</span><br><span class=\"line\">$ git pull origin dev</span><br><span class=\"line\">如果想省略仓库名和分支名则需要建立追踪关系，执行如下命令</span><br><span class=\"line\">$ git pull --set-upstream origin dev</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//merge操作会生成一个新的节点，之前的提交分开显示。而rebase操作不会生成新的节点, 因而能产生一个更为整洁的提交历史</span><br><span class=\"line\">$ git pull --rebase</span><br><span class=\"line\">//假设提交线图在执行pull前是这样的：</span><br><span class=\"line\">      C1---D1---E1  remotes/origin/master</span><br><span class=\"line\">      /</span><br><span class=\"line\">  A---B---C2---D2  master</span><br><span class=\"line\">执行git pull则提交线图会变成这样：</span><br><span class=\"line\">      C1---D1---E1  remotes/origin/master</span><br><span class=\"line\">      /          \\</span><br><span class=\"line\">  A---B---C2---D2-F  master</span><br><span class=\"line\">即会产生一个多余的合并历史，</span><br><span class=\"line\">如果执行git pull --rebase则提交线图会变成这样：</span><br><span class=\"line\">    remotes/origin/master</span><br><span class=\"line\">                  |</span><br><span class=\"line\">  A---B---C1---D1---C2&apos;---D2&apos;  master</span><br><span class=\"line\">可以看到，应用rebase则不会有新的提交F。C2,D2删除后重新提交为C2&apos;,D2&apos;了。</span><br></pre></td></tr></table></figure>\n<h4 id=\"分支操作\"><a href=\"#分支操作\" class=\"headerlink\" title=\"分支操作\"></a>分支操作</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）查看本地分支</span><br><span class=\"line\">$ git branch</span><br><span class=\"line\"></span><br><span class=\"line\">2）查看远程分支,远程分支会用红色表示出来(如果你开了颜色支持的话）</span><br><span class=\"line\">$ git branch -r</span><br><span class=\"line\"></span><br><span class=\"line\">3）新建分支</span><br><span class=\"line\">$ git branch [branch-name]</span><br><span class=\"line\">例: $ git branch dev</span><br><span class=\"line\"></span><br><span class=\"line\">4）切换分支</span><br><span class=\"line\">$ git checkout [branch-name]</span><br><span class=\"line\">例: $ git checkout dev</span><br><span class=\"line\"></span><br><span class=\"line\">5）新建并切换分支 </span><br><span class=\"line\">$ git checkout -b [branch-name]</span><br><span class=\"line\">// 当前分支的记录都会到新分支dev上</span><br><span class=\"line\">例: $ git checkout -b dev</span><br><span class=\"line\"></span><br><span class=\"line\">6）删除分支 </span><br><span class=\"line\">$ git branch -D [branch-name]</span><br><span class=\"line\"></span><br><span class=\"line\">7）叫起合并冲突工具kdiff3</span><br><span class=\"line\">$ git mergetool -t kdiff3</span><br><span class=\"line\"></span><br><span class=\"line\">8) 合并某个分支到当前分支</span><br><span class=\"line\">// 如果不是`fast forward&apos;则会产生合并的提交历史</span><br><span class=\"line\">$ git merge [branch-name]</span><br><span class=\"line\">// 将hotfix分支合并到当前分支</span><br><span class=\"line\">例: $ git merge hotfix</span><br><span class=\"line\">// 无论是否是`fast forward&apos;都产生合并的提交历史</span><br><span class=\"line\">例: $ git merge hotfix --no-f</span><br><span class=\"line\"></span><br><span class=\"line\">9) 选择任意一个commit，合并进当前分支</span><br><span class=\"line\">$ git cherry-pick [commit]</span><br><span class=\"line\"></span><br><span class=\"line\">10）合并提交历史 </span><br><span class=\"line\">// 当我们由master分支切换到新的分支dev工作，工作结束后想merge回master，如果直接在master应用git merge dev，</span><br><span class=\"line\">dev的提交历史就会出现在master中，有时这些记录很琐碎没有必要添加到master上，用squash就能解决这一问题。</span><br><span class=\"line\">a:squash后dev上的提交就变成了新的文件</span><br><span class=\"line\">  $ git merge --squash dev</span><br><span class=\"line\">b:重新commit代替之前所有提交</span><br><span class=\"line\">  $ git commit -m &quot;dev&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"版本回退\"><a href=\"#版本回退\" class=\"headerlink\" title=\"版本回退\"></a>版本回退</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）储存临时文件</span><br><span class=\"line\">//当工作区有未提交的文件，又想切换到另一个branch时就可以用git stash暂时存储</span><br><span class=\"line\">$ git stash </span><br><span class=\"line\"></span><br><span class=\"line\">2）查看存储了哪些文件</span><br><span class=\"line\">$ git stash list</span><br><span class=\"line\"></span><br><span class=\"line\">3）应用存储的临时文件</span><br><span class=\"line\">// 当回到之前的dirty工作区时可以通过git stash apply来恢复之前未提交的文件，也可以在其他branch应用这些存储的临时文件</span><br><span class=\"line\">$ git stash apply</span><br><span class=\"line\"></span><br><span class=\"line\">4) 让单个文件回退到指定的版本</span><br><span class=\"line\">a:进入到文件所在文件目录，或者能找到文件的路径</span><br><span class=\"line\">  $ git reflog test.js</span><br><span class=\"line\">  -&gt; 60e207a (HEAD -&gt; master) HEAD@&#123;0&#125;: commit: test.js +2</span><br><span class=\"line\">     1435819 HEAD@&#123;1&#125;: commit: test.js +1</span><br><span class=\"line\">b:回退到指定的版本</span><br><span class=\"line\">  $  git reset 1435819 test.js</span><br></pre></td></tr></table></figure>\n<h4 id=\"tag\"><a href=\"#tag\" class=\"headerlink\" title=\"tag\"></a>tag</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1) 轻量级tag</span><br><span class=\"line\">$ git tag [version]</span><br><span class=\"line\">例: $ git tag v1.0.0</span><br><span class=\"line\"> </span><br><span class=\"line\">2) 创建一个含附注类型的标签非常简单</span><br><span class=\"line\">$ git tag -a [version] -m &quot;[detail]&quot;</span><br><span class=\"line\">$ git tag -a v1.1.1 -m &quot;CuraCloudMI version 1.1.1&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">3) 查看tag</span><br><span class=\"line\">$ git show [version]</span><br><span class=\"line\"></span><br><span class=\"line\">4) 删除tag</span><br><span class=\"line\">git tag -d [version]</span><br></pre></td></tr></table></figure>\n<h4 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1) 查看某个命令的帮助</span><br><span class=\"line\">git help [command-name]</span><br><span class=\"line\"></span><br><span class=\"line\">2) 保留空文件</span><br><span class=\"line\">在空文件夹中新建.gitkeep文件</span><br><span class=\"line\"></span><br><span class=\"line\">3) 忽略某些文件</span><br><span class=\"line\">在.gitignore文件中添加需要忽略的文件夹或文件</span><br><span class=\"line\">例: </span><br><span class=\"line\">//忽略Pods文件夹下的所有文件</span><br><span class=\"line\">platforms/ios/Pods</span><br><span class=\"line\"></span><br><span class=\"line\">//忽略www下的所有文件除了plugins</span><br><span class=\"line\">platforms/ios/www/*</span><br><span class=\"line\">!platforms/ios/www/plugins</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjgrlpx1f00001ofyt1uwh1r9","category_id":"cjgrlpx1l00031ofyw8dv0hvi","_id":"cjgrlpx1p00091ofyubyl5lhz"},{"post_id":"cjgrlpx1j00021ofycyqjq11s","category_id":"cjgrlpx1o00061ofy0o744t7k","_id":"cjgrlpx1s000d1ofyp50mnp4t"},{"post_id":"cjgrlpx1n00051ofyhhkdrkjy","category_id":"cjgrlpx1l00031ofyw8dv0hvi","_id":"cjgrlpx1s000f1ofy5ot1pnn1"}],"PostTag":[{"post_id":"cjgrlpx1f00001ofyt1uwh1r9","tag_id":"cjgrlpx1m00041ofy3nnbyk3r","_id":"cjgrlpx1p00081ofyzx79ydgg"},{"post_id":"cjgrlpx1j00021ofycyqjq11s","tag_id":"cjgrlpx1o00071ofy9vho378j","_id":"cjgrlpx1r000c1ofy5ucycht1"},{"post_id":"cjgrlpx1n00051ofyhhkdrkjy","tag_id":"cjgrlpx1m00041ofy3nnbyk3r","_id":"cjgrlpx1s000e1ofyh5ol2fo6"}],"Tag":[{"name":"Git","_id":"cjgrlpx1m00041ofy3nnbyk3r"},{"name":"react","_id":"cjgrlpx1o00071ofy9vho378j"}]}}